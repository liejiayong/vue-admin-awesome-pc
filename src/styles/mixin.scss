// /**
//   * @description:  sass minxi util
//   * @author: liejiayong(809206619@qq.com)
//   * @Date: 2020-06-15 11:27:17
//   * @LastEditors: liejiayong(809206619@qq.com)
//   * @LastEditTime: 2021-12-11 17:06:29
//   * @FilePath:
//   * @warning:
//   */

@mixin bgimg($width, $url) {
  background: url(#{$url}) no-repeat top center / #{$width} auto;
}
@mixin bgimgc($width, $url) {
  background: url(#{$url}) no-repeat center / #{$width} auto;
}
@mixin bgimg-repeat($width, $url) {
  background: url(#{$url}) repeat / #{$width} auto;
}

@mixin inputcolor($color) {
  color: $color;
  &::-webkit-input-placeholder {
    color: $color;
  }
  &::-moz-placeholder {
    color: $color;
  }
  &::-o-input-placeholder {
    color: $color;
  }
  &::-ms-placeholder {
    color: $color;
  }
}
@mixin inputbg($color) {
  background-color: $color;
  &::-webkit-input-placeholder {
    background-color: $color;
  }
  &::-moz-placeholder {
    background-color: $color;
  }
  &::-o-placeholder {
    background-color: $color;
  }

  &::-ms-placeholder {
    background-color: $color;
  }
}

// select input align center
@mixin input-align($just) {
  text-align: $just;
  text-align-last: $just;
}

@mixin lh($height) {
  height: $height;
  line-height: $height;
}

@mixin mauto() {
  margin-left: auto;
  margin-right: auto;
}

@mixin triangle($width: 10px) {
  border-top: $width dashed transparent;
  border-bottom: $width dashed transparent;
  border-left: $width dashed transparent;
  border-right: $width dashed transparent;
  height: 0;
  width: 0;
  font-size: 0;
  line-height: 0;
  overflow: hidden;
}

// table border
@mixin table-border($config: 1px solid #e3ca92) {
  table {
    thead tr {
      td {
        height: 45px;
        border-left: $config;
        border-top: $config;
        &:last-of-type {
          border-right: $config;
        }
      }
    }
    tbody tr {
      &:last-of-type td {
        border-bottom: $config;
      }
      td {
        height: 45px;
        border-left: $config;
        border-top: $config;
        &:last-of-type {
          border-right: $config;
        }
      }
    }
  }
}
// 1px border
@mixin border-hairline($directions: bottom, $color: #ccc, $position: after) {
  // 是否只有一个方向
  $only-direction: string==type-of($directions);

  @if ($only-direction) {
    $directions: ($directions);
  }

  @each $direction in $directions {
    border-#{$direction}: 1px solid $color;
  }

  @media only screen and (-webkit-min-device-pixel-ratio: 2) {
    & {
      position: relative;

      // 删除1像素密度比下的边框
      @each $direction in $directions {
        border-#{$direction}: none;
      }
    }

    &:#{$position} {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      display: block;
      width: 200%;
      height: 200%;
      transform: scale(0.5);
      box-sizing: border-box;
      padding: 1px;
      transform-origin: 0 0;
      pointer-events: none;
      border: 0 solid $color;

      @each $direction in $directions {
        border-#{$direction}-width: 1px;
      }
    }
  }

  @media only screen and (-webkit-min-device-pixel-ratio: 3) {
    &:#{$position} {
      width: 300%;
      height: 300%;
      transform: scale(0.33);
    }
  }
}
// /* 生成.border-top-1px等4个单侧边框; */
// @each $dir in (top, right, bottom, left) {
//   .border-#{$dir}-#{1}px {
//     @include border-hairline($dir);
//   }
// }

// 文字行数
@mixin nowrap {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
@mixin ellipsis($count) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $count;
  overflow: hidden;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
}

// text style
@mixin text-gradient($color, $sty: linear-gradient(yellow, orange) repeat) {
  color: $color;
  @supports (-webkit-background-clip: text) {
    background: $sty;
    background-clip: text; // >=ie9+
    color: transparent;
  }
}
@mixin greyscale {
  -webkit-filter: grayscale(100%);
  -moz-filter: grayscale(100%);
  -ms-filter: grayscale(100%);
  -o-filter: grayscale(100%);
  filter: progid:DXImageTransform.Microsoft.BasicImage(grayscale=1); /* ie */
  filter: gray; /* ie6-ie9 */
  _filter: none;
}

// button mixin
@mixin btnedage-expanding($width: 5px, $position: "") {
  @if $position != "" {
    position: $position;
  }
  overflow: initial !important;
  &::after {
    content: "";
    position: absolute;
    top: -$width;
    right: -$width;
    bottom: -$width;
    left: -$width;
  }
}

// status
// clear float
@mixin clearfix {
  zoom: 1;
  &::after {
    content: "\0020";
    clear: both;
    display: block;
    height: 0;
    visibility: hidden;
    opacity: 0;
    font-size: 0;
  }
}
// flex layout
// example: @include flexs(center, center, wrap);
@mixin flexs($h: "", $v: "", $wrap: "") {
  display: flex;
  @if $h != "" {
    justify-content: $h;
  }
  @if $v != "" {
    align-items: $v;
  }
  @if $wrap != "" {
    flex-wrap: $wrap;
  }
}

// @include flex-width();
// @include flex-width(1);
// @include flex-width(auto);
// @include flex-width(20px, 1 1);
@mixin flex-width($width: 1, $flex: "") {
  @if $width == 1 {
    flex: 1;
  } @else if $width == auto {
    flex: auto;
  } @else {
    @if $flex == "" {
      flex: 0 0 $width;
      width: $width;
    } @else {
      flex: $flex $width;
      width: $width;
    }
  }
}

// scroll
// 滚动卡顿
@mixin scroll-state($scroll: "") {
  @if $scroll != "" {
    overscroll-behavior: contain;
    -ms-scroll-chaining: non e;
  }
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
}
@mixin scroll-init {
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
}
@mixin scroll-static {
  position: static;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
}
@mixin scroll-chaining {
  overscroll-behavior: contain;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
  -ms-scroll-chaining: none;
}
